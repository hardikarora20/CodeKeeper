/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.codekeeper.gui;

import com.codekeeper.dao.PasswordDao;
import com.codekeeper.pojo.PasswordPojo;
import com.codekeeper.pojo.UserProfile;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author hardi
 */
public class SavePassword extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public SavePassword() {
        UIManager.put( "TextComponent.arc", 25 );
        UIManager.put( "Button.arc", 25 );
        UIManager.put( "Component.arc", 25 );
        UIManager.put( "CheckBox.arc", 25 );
        UIManager.put( "ProgressBar.arc", 15 );
        UIManager.put( "Component.focusColor", new Color(255,191,0));
        UIManager.put( "CheckBox.icon.selectedBackground", new Color(255,191,0));
        FlatMacDarkLaf.setup();
        initComponents();
    }
    public SavePassword(String pass){
        this();
        txtPass.setText(pass);
        calcRating();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        lblPassPerc = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblCat = new javax.swing.JLabel();
        lblWeb = new javax.swing.JLabel();
        lblUsr = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        btnGeneratePass = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        jcCategory = new javax.swing.JComboBox<>();
        txtUser = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Save Password");
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(45, 45, 45));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 17)); // NOI18N
        jLabel1.setText("Password Analysis");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, 230, 40));

        jProgressBar1.setBackground(new java.awt.Color(40, 40, 40));
        jProgressBar1.setForeground(new java.awt.Color(255, 191, 0));
        jProgressBar1.setToolTipText("rates password on the basis of length, digits, lowercase, uppercase characters and symbols");
        jPanel1.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 600, 390, 3));

        lblPassPerc.setFont(new java.awt.Font("Poppins", 1, 36)); // NOI18N
        lblPassPerc.setText("0%");
        jPanel1.add(lblPassPerc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 540, 150, 60));

        jButton2.setBackground(new java.awt.Color(40, 40, 40));
        jButton2.setFocusable(false);
        jButton2.setRequestFocusEnabled(false);
        jButton2.setRolloverEnabled(false);
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, 470, 130));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/codekeeper/icons/back.png"))); // NOI18N
        btnBack.setToolTipText("Go back to Home?");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusable(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 70, 70));

        lblCat.setFont(new java.awt.Font("Poppins", 1, 17)); // NOI18N
        lblCat.setText("Category");
        lblCat.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel1.add(lblCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 210, 40));

        lblWeb.setFont(new java.awt.Font("Poppins", 1, 17)); // NOI18N
        lblWeb.setText("App/Website Name");
        lblWeb.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel1.add(lblWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 210, 40));

        lblUsr.setFont(new java.awt.Font("Poppins", 1, 17)); // NOI18N
        lblUsr.setText("Username/Email");
        lblUsr.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel1.add(lblUsr, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 170, 210, 40));

        lblPass.setFont(new java.awt.Font("Poppins", 1, 17)); // NOI18N
        lblPass.setText("Password");
        lblPass.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel1.add(lblPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 210, 40));

        btnGeneratePass.setBackground(new java.awt.Color(255, 191, 0));
        btnGeneratePass.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnGeneratePass.setForeground(new java.awt.Color(74, 51, 3));
        btnGeneratePass.setText("SAVE PASSWORD");
        btnGeneratePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGeneratePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePassActionPerformed(evt);
            }
        });
        jPanel1.add(btnGeneratePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 510, 470, 130));

        txtName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtName.setToolTipText("Enter app/website name");
        txtName.setMargin(new java.awt.Insets(2, 20, 2, 2));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 470, 90));

        txtMail.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtMail.setToolTipText("Enter username or email id");
        txtMail.setMargin(new java.awt.Insets(2, 20, 2, 2));
        txtMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMailActionPerformed(evt);
            }
        });
        jPanel1.add(txtMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 210, 470, 90));

        txtPass.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtPass.setToolTipText("Enter password");
        txtPass.setMargin(new java.awt.Insets(2, 20, 2, 2));
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });
        jPanel1.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 470, 90));

        jcCategory.setBackground(new java.awt.Color(40, 40, 40));
        jcCategory.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jcCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  Social Media", "  Email", "  Banking", "  Shopping", "  Entertainment", "  Work", "  Gaming", "  Education", "  Travel", "  Utilities", "  Miscellaneous" }));
        jcCategory.setToolTipText("Select application category");
        jPanel1.add(jcCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 470, 90));

        txtUser.setFont(new java.awt.Font("Poppins", 1, 36)); // NOI18N
        txtUser.setForeground(new java.awt.Color(255, 255, 255));
        txtUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtUser.setText("Save Password");
        jPanel1.add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 1050, 70));

        jButton1.setBackground(new java.awt.Color(58, 58, 58));
        jButton1.setEnabled(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setRolloverEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1240, 590));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1298, 767));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new HomeScreen().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnGeneratePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePassActionPerformed
        System.out.println(UserProfile.getMail());
        if(!check()){
           JOptionPane.showMessageDialog(null, "Please fill all information!", "Error", JOptionPane.ERROR_MESSAGE);
           return;
       }
       PasswordPojo pp = new PasswordPojo();
       pp.setUserEmail(UserProfile.getMail());
       pp.setWebsite(txtName.getText());
       pp.setUsername(txtMail.getText());
       pp.setPassword(txtPass.getText());
       pp.setCategory(jcCategory.getSelectedItem().toString().trim());
       String rating = lblPassPerc.getText().toString().trim();
       pp.setRating(Integer.parseInt(rating.substring(0, rating.length() - 1)));
       System.out.println(pp);
       
        try {
            boolean result=PasswordDao.savePassword(pp);
            if(result){
                JOptionPane.showMessageDialog(null, "Password saved successfully!");
                new HomeScreen().setVisible(true);
                this.dispose();
                return;
            }
            JOptionPane.showMessageDialog(null, "Could not save password! Try Again");    
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnGeneratePassActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMailActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        calcRating();
    }//GEN-LAST:event_txtPassKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SavePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SavePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SavePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SavePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SavePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGeneratePass;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JComboBox<String> jcCategory;
    private javax.swing.JLabel lblCat;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPassPerc;
    private javax.swing.JLabel lblUsr;
    private javax.swing.JLabel lblWeb;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPass;
    private javax.swing.JLabel txtUser;
    // End of variables declaration//GEN-END:variables

    private int rating(String pass) {
        if(pass.trim().isEmpty()) return 0;
        boolean digit = false, lower = false, upper = false, symbol = true;
        for(char c: pass.toCharArray()){
            if(Character.isDigit(c))
                digit = true;
            else if(Character.isUpperCase(c))
                upper = true;
            else if(Character.isLowerCase(c))
                lower = true;
            else if(c=='@' || c=='#' || c=='$' || c=='!' || c=='&')
                symbol = true;
        }
        int len = pass.length();
        int rating = 1;
        if(len>20)
            rating = 8;
        else if(len>15)
            rating = 6;
        else if(len>10)
            rating = 4;
        else if(len>8)
            rating = 2;
        else
            rating = 1;
        
        if(digit) rating++;
        if(symbol) rating++;
        if(lower) rating++;
        if(upper) rating++;
        return rating;
    }

    private void calcRating() {
        int value = (rating(txtPass.getText().trim())*100/ 12);
        jProgressBar1.setValue(value);
        lblPassPerc.setText(String.valueOf(value)+"%");
    }
    private boolean check(){
        if(txtName.getText().trim().isEmpty() || txtMail.getText().trim().isEmpty() || txtPass.getText().trim().isEmpty())
            return false;
        return true;
    }
}
